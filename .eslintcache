[{"D:\\code\\personal-projects\\fbi-wanted\\src\\index.js":"1","D:\\code\\personal-projects\\fbi-wanted\\src\\reportWebVitals.js":"2","D:\\code\\personal-projects\\fbi-wanted\\src\\App.js":"3","D:\\code\\personal-projects\\fbi-wanted\\src\\pages\\Home\\index.js":"4","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\Hero\\index.js":"5","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\Filters\\index.js":"6","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\WantedList\\index.js":"7","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\FilterCollapse\\index.js":"8","D:\\code\\personal-projects\\fbi-wanted\\src\\utils\\API.js":"9","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\ImgModal\\index.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":360,"mtime":1612145342676,"results":"14","hashOfConfig":"12"},{"size":9164,"mtime":1611984584291,"results":"15","hashOfConfig":"12"},{"size":364,"mtime":1611969466455,"results":"16","hashOfConfig":"12"},{"size":5717,"mtime":1611968394969,"results":"17","hashOfConfig":"12"},{"size":4195,"mtime":1612145774708,"results":"18","hashOfConfig":"12"},{"size":2766,"mtime":1611810875662,"results":"19","hashOfConfig":"12"},{"size":331,"mtime":1612046133440,"results":"20","hashOfConfig":"12"},{"size":402,"mtime":1611705147533,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"4i1hqf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"D:\\code\\personal-projects\\fbi-wanted\\src\\index.js",[],["47","48"],"D:\\code\\personal-projects\\fbi-wanted\\src\\reportWebVitals.js",[],"D:\\code\\personal-projects\\fbi-wanted\\src\\App.js",[],"D:\\code\\personal-projects\\fbi-wanted\\src\\pages\\Home\\index.js",["49","50","51","52"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Hero from '../../components/Hero'\r\nimport Filters from '../../components/Filters'\r\nimport WantedList from '../../components/WantedList'\r\nimport axios from 'axios'\r\nimport API from '../../utils/API'\r\nimport './index.css'\r\nimport ImgModal from '../../components/ImgModal'\r\n\r\nexport default function Home() {\r\n    const wantedPeople = useRef([])\r\n    const setWantedPeople = data => {\r\n        wantedPeople.current = data\r\n    }\r\n\r\n    const [filteredWantedPeople, setFilteredWantedPeople] = useState([])\r\n\r\n    const [displayedPeople, setDisplayedPeople] = useState([])\r\n\r\n    // current page of list of wanted people, starts counting at 0 but will be displayed as 1\r\n    const [page, setPage] = useState(0)\r\n\r\n    const [filters, setFilters] = useState({\r\n        subject: [],\r\n        sex: '',\r\n        keyword: '',\r\n    })\r\n\r\n    const [showImgModal, setShowImgModal] = useState(false)\r\n    const [imgToShow, setImgToShow] = useState(null)\r\n\r\n    const [showMobileFilters, setShowMobileFilters] = useState(false)\r\n\r\n    // indicates site is loading data from api\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        // make request to fbi api for list of all wanted persons\r\n        getAllWanted()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // when either the page or the arr of filtered wanted people is updated, update arr of people displayed on the page\r\n        const startIndex = page * 10\r\n        let endIndex\r\n        // check if end index is less than or equal to largest index in the arr of filtered people\r\n        if (page * 10 + 9 <= filteredWantedPeople.length - 1) {\r\n            // expression allows for 10 people to be displayed at a time\r\n            endIndex = page * 10 + 10\r\n        } else {\r\n            // else less than 10 people are left to be displayed so end index is last index of arr\r\n            endIndex = filteredWantedPeople.length\r\n        }\r\n        console.log(startIndex, endIndex)\r\n        // update state with array of 10 people to display\r\n        setDisplayedPeople(filteredWantedPeople.slice(startIndex, endIndex))\r\n    }, [page, filteredWantedPeople])\r\n\r\n    useEffect(() => {\r\n        // when img modal is being show, prevent page from being scrolled\r\n        if (showImgModal) {\r\n            document.body.style.overflow = 'hidden'\r\n        } else {\r\n            document.body.style.overflow = 'auto'\r\n        }\r\n    }, [showImgModal])\r\n\r\n    useEffect(() => {\r\n        // when filters state is changed, apply filter to all wanted people\r\n        if (filters.subject.length > 0 || filters.sex || filters.keyword) {\r\n            applyFilter()\r\n        } else {\r\n            // else no filters are applied so filtered arr can be set to array of all people\r\n            setFilteredWantedPeople(wantedPeople.current)\r\n        }\r\n    }, [filters])\r\n\r\n    const getAllWanted = () => {\r\n        // make request to server for wanted persons info\r\n        API.getAllWanted()\r\n            .then(res => {\r\n                console.log(res.data)\r\n                // store wanted people data in ref hook\r\n                setWantedPeople(res.data)\r\n\r\n                // people to display can also be set at this point as no filters have been placed yet\r\n                setFilteredWantedPeople(res.data)\r\n\r\n                setIsLoading(false)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const applyFilter = () => {\r\n        let filteredArr = []\r\n        // filter by subjects if there are any subjects to filter by\r\n        if (filters.subject.length > 0) {\r\n            const subjectFilteredArr = wantedPeople.current.filter(person => {\r\n                // iterate over subjects arr for wanted person\r\n                for (let i = 0; i < person.subjects.length; i++) {\r\n                    const subject = person.subjects[i]\r\n\r\n                    // iterate over subjects arr in filter and compare filter with current subject in person's arr\r\n                    for (let i = 0; i < filters.subject.length; i++) {\r\n                        const filterSubject = filters.subject[i].toLowerCase();\r\n                        // create regex for comparing subject to filter\r\n                        const regex = new RegExp(`\\\\b${filterSubject}`, 'i')\r\n                        // test regex on subject string\r\n                        const isMatch = regex.test(subject)\r\n                        // if regex matches, return true, to keep this person in the new filtered array\r\n                        if (isMatch) return true\r\n                    }\r\n                }\r\n\r\n                // if nothing has been returned yet, we can return false since there is no match\r\n                return false\r\n            })\r\n            // set filteredArr to new arr\r\n            filteredArr = subjectFilteredArr;\r\n        }\r\n\r\n        // now filter by sex\r\n        // if filteredArr was just filtered by subject, we can just filter filteredArr\r\n        if (filters.sex) {\r\n            let arrToFilter;\r\n            // set array to filter to filteredArr only if it has people in it, else we must filter then entire array of wanted people\r\n            if (filteredArr.length > 0) arrToFilter = filteredArr\r\n            else arrToFilter = wantedPeople.current\r\n\r\n            const sexFilteredArr = arrToFilter.filter(person => {\r\n                // return true if person's sex matches filter\r\n                if (person.sex && person.sex.toLowerCase() === filters.sex.toLowerCase()) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            })  \r\n            \r\n            // set filteredArr to new sexFilteredArr\r\n            filteredArr = sexFilteredArr;\r\n        }\r\n\r\n        // filter by name\r\n        // if filteredArr is empty, we must filter entire array of wanted people\r\n        if (filters.keyword) {\r\n            let arrToFilter;\r\n            // set array to filter to either filteredArr or entire arr of wanted people\r\n            if (filteredArr.length > 0) arrToFilter = filteredArr\r\n            else arrToFilter = wantedPeople.current;\r\n\r\n            const keywordFilteredArr = arrToFilter.filter(person => {\r\n                // create regex to test for name match\r\n                const regex = new RegExp(`\\\\b${filters.keyword}`, 'i')\r\n                \r\n                // due to the fbi api not providing a clear name for every person, we will test \r\n                // the regex on multiple parts of the person's obj\r\n                let isMatch;\r\n                // on each test, if there is a match return true to add the person to the filtered arr\r\n                if (person.title && regex.test(person.title)) return true\r\n                else if (person.details && regex.test(person.details)) return true\r\n                else if (person.remarks && regex.test(person.remarks)) return true\r\n                else {\r\n                    // if no matches, return false\r\n                    return false\r\n                }\r\n            })\r\n\r\n            // set filteredArr to nameFilteredArr\r\n            filteredArr = keywordFilteredArr\r\n        }\r\n\r\n        // set state of filtered people to new array of filtered people\r\n        setFilteredWantedPeople(filteredArr)\r\n    }\r\n\r\n    const pageUp = () => {\r\n        setPage(page + 1)\r\n\r\n        // scroll to top of list\r\n        window.scrollTo(0, window.innerHeight)\r\n    }\r\n\r\n    const pageDown = () => {\r\n        setPage(page - 1)\r\n\r\n        // scroll to top of list\r\n        window.scrollTo(0, window.innerHeight)\r\n    }\r\n\r\n    const openImgInModal = (src) => {\r\n        // set state with src of img to show\r\n        setImgToShow(src)\r\n        setShowImgModal(true)\r\n    }\r\n\r\n    const closeImgModal = () => {\r\n        setImgToShow(null)\r\n        setShowImgModal(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Hero />\r\n            <div className='content-wrapper'>\r\n                <button className='mobile-filters-btn' onClick={() => setShowMobileFilters(true)}>Filters</button>\r\n                <WantedList \r\n                    wantedPeople={displayedPeople}\r\n                    openImgInModal={openImgInModal}\r\n                    page={page}\r\n                    setPage={setPage}\r\n                    pageUp={pageUp}\r\n                    pageDown={pageDown}\r\n                    wantedArr={filteredWantedPeople}\r\n                    isLoading={isLoading}\r\n                />\r\n                <Filters\r\n                    filters={filters}\r\n                    setFilters={setFilters}\r\n                    page={page}\r\n                    setPage={setPage}\r\n                    wantedArr={filteredWantedPeople}\r\n                    pageUp={pageUp}\r\n                    pageDown={pageDown}\r\n                    showMobile={showMobileFilters}\r\n                    setShowMobile={setShowMobileFilters}\r\n                />\r\n            </div>\r\n            <ImgModal \r\n                show={showImgModal} \r\n                src={imgToShow}\r\n                closeImgModal={closeImgModal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\Hero\\index.js",["53"],"import React from 'react'\r\nimport './index.css'\r\n\r\nexport default function Hero() {\r\n    return (\r\n        <div className='hero'>\r\n            <img src='./assets/img/capitol-far.jpg'/>\r\n            <div className='overlay'></div>\r\n            <div className='text-wrapper'>\r\n                <h1>FBI <br />WANTED</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\Filters\\index.js",[],"D:\\code\\personal-projects\\fbi-wanted\\src\\components\\WantedList\\index.js",["54","55","56","57","58","59"],"D:\\code\\personal-projects\\fbi-wanted\\src\\components\\FilterCollapse\\index.js",[],"D:\\code\\personal-projects\\fbi-wanted\\src\\utils\\API.js",["60"],"import axios from 'axios'\r\n\r\nconst APIENDPOINT = process.env.REACT_APP_APIENDPOINT || 'http://localhost:8000'\r\n\r\nexport default {\r\n    getAllWanted: function() {\r\n        return axios.get(APIENDPOINT + '/wanted')\r\n    },\r\n    getWantedPerson: function(id) {\r\n        return axios.get(APIENDPOINT + '/wanted/person/' + id)\r\n    }\r\n}","D:\\code\\personal-projects\\fbi-wanted\\src\\components\\ImgModal\\index.js",["61"],"import React from 'react'\r\nimport './index.css'\r\n\r\nexport default function ImgModal(props) {\r\n    return (\r\n        <div className={`img-modal-wrapper${props.show ? ' show' : ''}`}>\r\n            <div className='overlay' onClick={props.closeImgModal}></div>\r\n            <img src={props.src} />\r\n            <p className='modal-exit' onClick={props.closeImgModal}>&times;</p>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":40,"column":8,"nodeType":"72","endLine":40,"endColumn":10,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":76,"column":8,"nodeType":"72","endLine":76,"endColumn":17,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"76","line":159,"column":21,"nodeType":"68","messageId":"69","endLine":159,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":7,"column":13,"nodeType":"79","endLine":7,"endColumn":54},{"ruleId":"66","severity":1,"message":"80","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":28},{"ruleId":"66","severity":1,"message":"81","line":15,"column":21,"nodeType":"68","messageId":"69","endLine":15,"endColumn":32},{"ruleId":"66","severity":1,"message":"82","line":41,"column":39,"nodeType":"68","messageId":"69","endLine":41,"endColumn":54},{"ruleId":"66","severity":1,"message":"83","line":49,"column":23,"nodeType":"68","messageId":"69","endLine":49,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":57,"column":25,"nodeType":"79","endLine":60,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":71,"column":29,"nodeType":"79","endLine":71,"endColumn":63},{"ruleId":"88","severity":1,"message":"89","line":5,"column":1,"nodeType":"90","endLine":12,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":8,"column":13,"nodeType":"79","endLine":8,"endColumn":36},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllWanted'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'applyFilter'. Either include it or remove the dependency array.",["94"],"'isMatch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'reward_text' is assigned a value but never used.","'modifiedRemarks' is assigned a value but never used.","'personId' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [getAllWanted]",{"range":"99","text":"100"},"Update the dependencies array to be: [applyFilter, filters]",{"range":"101","text":"102"},[1309,1311],"[getAllWanted]",[2883,2892],"[applyFilter, filters]"]